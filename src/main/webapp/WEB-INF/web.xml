<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>
  
  <context-param>  
        <param-name>contextConfigLocation</param-name>  
        <param-value>classpath:config/spring/applicationContext.xml</param-value>  
    </context-param>  
    
    
    
    <!-- 加载log4j的配置文件log4j.properties -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>

    <!-- 设定刷新日志配置文件的时间间隔，这里设置为10s -->
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>10000</param-value>
    </context-param>
    
        
<!--   Log4jConfigListener会去读取配置文件;开一条watchdog线程每60秒扫描一下配置文件的变化（
  这样在web服务启动后再去修改配置文件也不用重新启动web服务了）;
  并把 web目录的路径压入一个叫webapp.root的系统变量（webapp.root将在log4j.properties文件中使用）。 -->
		<filter>  
	    <filter-name>shiroFilter</filter-name>  
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
	    <init-param>  
	        <param-name>targetFilterLifecycle</param-name>  
	        <param-value>true</param-value>  
	    </init-param>  
	</filter>  
	<filter-mapping>  
	    <filter-name>shiroFilter</filter-name>  
	    <url-pattern>/*</url-pattern>  
	</filter-mapping> 
	<filter>
	    <filter-name>cors</filter-name>
	    <filter-class>com.web.filter.CORSFilter</filter-class>
	</filter>
	
	<filter-mapping>
	    <filter-name>cors</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>

   
  <servlet>
  	<servlet-name>springmvc-app</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:config/spring/applicationContext.xml</param-value>
  	</init-param>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
     <servlet-name>springmvc-app</servlet-name>
     <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
